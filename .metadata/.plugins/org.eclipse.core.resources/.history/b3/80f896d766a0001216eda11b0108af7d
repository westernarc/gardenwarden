package com.westernarc.gardenwarden.Node;

import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g3d.materials.Material;
import com.badlogic.gdx.graphics.g3d.model.still.StillModel;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Vector3;

public class Node {
	protected Texture texture;
	protected Material material;
	protected StillModel model;
	
	protected Vector3 position;
	protected float rotation;
	
	public Node() {
		position = new Vector3();
	}
	
	public StillModel getModel() {
		return model;
	}
	public void setModel(StillModel model) {
		this.model = model;
	}
	public void setMaterial(Material material) {
		this.material = material;
		model.setMaterial(this.material);
	}
	public void render() {
		model.render();
	}
	
	public void setPosition(Vector3 v) {
		position.set(v.x,v.y,v.z);
	}
	public void setPosition(float x, float y, float z) {
		position.set(x,y,z);
	}
	public Vector3 getPosition() {
		return position;
	}
	public float getX() {
		return position.x;
	}
	public float getY() {
		return position.y;
	}
	public float getZ() {
		return position.z;
	}
	public void setX(float newx) {
		position.x = newx;
	}
	public void setY(float newy) {
		position.y = newy;
	}
	public void setZ(float newz) {
		position.z = newz;
	}
	public void setRotation(float angle) {
		rotation = angle;
	}
	public float getRotation() {
		return rotation;
	}
	public void rotate(float r) {
		rotation += r;
	}
	public void move(Vector3 m) {
		position.add(m);
	}
	public void move(float x, float y, float z) {
		position.add(x,y,z);
	}
	
	public void moveTo(float tpf, Vector3 targ) {
		moveTo(tpf, targ.x, targ.y, targ.z);
	}
	public void moveTo(float tpf, float x, float y, float z) {
		Vector3 vecToTarg = position.cpy().sub(x, y, z);
		float dst = vecToTarg.len();
		if(dst > 1 && dst < -1) {
			position.add(vecToTarg.nor().mul(tpf));
		}
	}
}
